// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Aufgabe component => main component Should match snapShot with the Aufgabe(index) component 1`] = `
<Aufgabe>
  <div
    className="Prototyp"
    style={
      Object {
        "position": "relative",
      }
    }
  >
    <Row
      gutter={
        Array [
          8,
          8,
        ]
      }
    >
      <div
        className="ant-row"
        style={
          Object {
            "marginBottom": 4,
            "marginLeft": -4,
            "marginRight": -4,
            "marginTop": -4,
          }
        }
      >
        <Col
          xs={24}
        >
          <div
            className="ant-col ant-col-xs-24"
            style={
              Object {
                "paddingBottom": 4,
                "paddingLeft": 4,
                "paddingRight": 4,
                "paddingTop": 4,
              }
            }
          >
            <Memo(LoadStopSequence)
              currentStopSequence={Object {}}
              handleDeleteStopSequence={[Function]}
              handleUpdateAfterSave={[Function]}
              onClearAll={[Function]}
              onSendRequest={[Function]}
              ondisplayStopSequence={[Function]}
              stateDND={
                Object {
                  "suggestions": Object {
                    "items": Array [],
                    "title": "Suggestion",
                  },
                  "trajekt": Object {
                    "items": Array [],
                    "title": "Stop sequence",
                  },
                }
              }
              stopSequenceList={Array []}
            >
              <Card>
                <div
                  className="ant-card ant-card-bordered"
                >
                  <div
                    className="ant-card-body"
                    style={Object {}}
                  >
                    <ForwardRef(InternalForm)
                      form={
                        Object {
                          "__INTERNAL__": Object {
                            "itemRef": [Function],
                            "name": undefined,
                          },
                          "getFieldError": [Function],
                          "getFieldInstance": [Function],
                          "getFieldValue": [Function],
                          "getFieldsError": [Function],
                          "getFieldsValue": [Function],
                          "getInternalHooks": [Function],
                          "isFieldTouched": [Function],
                          "isFieldValidating": [Function],
                          "isFieldsTouched": [Function],
                          "isFieldsValidating": [Function],
                          "resetFields": [Function],
                          "scrollToField": [Function],
                          "setFields": [Function],
                          "setFieldsValue": [Function],
                          "submit": [Function],
                          "validateFields": [Function],
                        }
                      }
                      layout="vertical"
                    >
                      <SizeContextProvider>
                        <ForwardRef(Form)
                          className="ant-form ant-form-vertical"
                          form={
                            Object {
                              "__INTERNAL__": Object {
                                "itemRef": [Function],
                                "name": undefined,
                              },
                              "getFieldError": [Function],
                              "getFieldInstance": [Function],
                              "getFieldValue": [Function],
                              "getFieldsError": [Function],
                              "getFieldsValue": [Function],
                              "getInternalHooks": [Function],
                              "isFieldTouched": [Function],
                              "isFieldValidating": [Function],
                              "isFieldsTouched": [Function],
                              "isFieldsValidating": [Function],
                              "resetFields": [Function],
                              "scrollToField": [Function],
                              "setFields": [Function],
                              "setFieldsValue": [Function],
                              "submit": [Function],
                              "validateFields": [Function],
                            }
                          }
                          onFinishFailed={[Function]}
                        >
                          <form
                            className="ant-form ant-form-vertical"
                            onSubmit={[Function]}
                          >
                            <FormItem>
                              <Row
                                className="ant-form-item"
                                key="row"
                              >
                                <div
                                  className="ant-row ant-form-item"
                                  style={Object {}}
                                >
                                  <FormItemLabel
                                    prefixCls="ant-form"
                                    requiredMark={true}
                                  />
                                  <FormItemInput
                                    errors={Array []}
                                    onDomErrorVisibleChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    validateStatus=""
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <ForwardRef
                                              id="radioButton"
                                              onChange={[Function]}
                                              value="load"
                                            >
                                              <div
                                                className="ant-radio-group ant-radio-group-outline"
                                                id="radioButton"
                                              >
                                                <ForwardRef(RadioButton)
                                                  id="load_button"
                                                  value="load"
                                                >
                                                  <Radio
                                                    checked={true}
                                                    id="load_button"
                                                    prefixCls="ant-radio-button"
                                                    type="radio"
                                                    value="load"
                                                  >
                                                    <label
                                                      className="ant-radio-button-wrapper ant-radio-button-wrapper-checked"
                                                    >
                                                      <Checkbox
                                                        checked={true}
                                                        className=""
                                                        defaultChecked={false}
                                                        id="load_button"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        prefixCls="ant-radio-button"
                                                        style={Object {}}
                                                        type="radio"
                                                        value="load"
                                                      >
                                                        <span
                                                          className="ant-radio-button ant-radio-button-checked"
                                                          style={Object {}}
                                                        >
                                                          <input
                                                            checked={true}
                                                            className="ant-radio-button-input"
                                                            id="load_button"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            type="radio"
                                                            value="load"
                                                          />
                                                          <span
                                                            className="ant-radio-button-inner"
                                                          />
                                                        </span>
                                                      </Checkbox>
                                                      <span>
                                                        Load
                                                      </span>
                                                    </label>
                                                  </Radio>
                                                </ForwardRef(RadioButton)>
                                                <ForwardRef(RadioButton)
                                                  id="new_button"
                                                  value="new"
                                                >
                                                  <Radio
                                                    checked={false}
                                                    id="new_button"
                                                    prefixCls="ant-radio-button"
                                                    type="radio"
                                                    value="new"
                                                  >
                                                    <label
                                                      className="ant-radio-button-wrapper"
                                                    >
                                                      <Checkbox
                                                        checked={false}
                                                        className=""
                                                        defaultChecked={false}
                                                        id="new_button"
                                                        onBlur={[Function]}
                                                        onChange={[Function]}
                                                        onFocus={[Function]}
                                                        prefixCls="ant-radio-button"
                                                        style={Object {}}
                                                        type="radio"
                                                        value="new"
                                                      >
                                                        <span
                                                          className="ant-radio-button"
                                                          style={Object {}}
                                                        >
                                                          <input
                                                            checked={false}
                                                            className="ant-radio-button-input"
                                                            id="new_button"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            onFocus={[Function]}
                                                            type="radio"
                                                            value="new"
                                                          />
                                                          <span
                                                            className="ant-radio-button-inner"
                                                          />
                                                        </span>
                                                      </Checkbox>
                                                      <span>
                                                        New
                                                      </span>
                                                    </label>
                                                  </Radio>
                                                </ForwardRef(RadioButton)>
                                              </div>
                                            </ForwardRef>
                                          </div>
                                        </div>
                                        <ErrorList
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                        >
                                          <CSSMotion
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </ErrorList>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </FormItem>
                            <FormItem
                              label="Modes"
                            >
                              <Row
                                className="ant-form-item"
                                key="row"
                              >
                                <div
                                  className="ant-row ant-form-item"
                                  style={Object {}}
                                >
                                  <FormItemLabel
                                    label="Modes"
                                    prefixCls="ant-form"
                                    requiredMark={true}
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          title="Modes"
                                        >
                                          Modes
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    label="Modes"
                                    onDomErrorVisibleChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    validateStatus=""
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <Select
                                              id="mode_selector"
                                              onChange={[Function]}
                                              value="Choose mode"
                                            >
                                              <select
                                                onChange={[Function]}
                                              >
                                                <Option
                                                  id="Choose mode"
                                                  value="Choose mode"
                                                />
                                                <Option
                                                  id="13"
                                                  value="13"
                                                />
                                                <Option
                                                  id="5"
                                                  value="5"
                                                />
                                                <Option
                                                  id="8"
                                                  value="8"
                                                />
                                                <Option
                                                  id="9"
                                                  value="9"
                                                />
                                                <Option
                                                  id="2"
                                                  value="2"
                                                />
                                                <Option
                                                  id="4"
                                                  value="4"
                                                />
                                              </select>
                                            </Select>
                                          </div>
                                        </div>
                                        <ErrorList
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                        >
                                          <CSSMotion
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </ErrorList>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </FormItem>
                            <FormItem
                              label="Stop sequence name"
                            >
                              <Row
                                className="ant-form-item"
                                key="row"
                              >
                                <div
                                  className="ant-row ant-form-item"
                                  style={Object {}}
                                >
                                  <FormItemLabel
                                    label="Stop sequence name"
                                    prefixCls="ant-form"
                                    requiredMark={true}
                                  >
                                    <Col
                                      className="ant-form-item-label"
                                    >
                                      <div
                                        className="ant-col ant-form-item-label"
                                        style={Object {}}
                                      >
                                        <label
                                          className=""
                                          title="Stop sequence name"
                                        >
                                          Stop sequence name
                                        </label>
                                      </div>
                                    </Col>
                                  </FormItemLabel>
                                  <FormItemInput
                                    errors={Array []}
                                    label="Stop sequence name"
                                    onDomErrorVisibleChange={[Function]}
                                    prefixCls="ant-form"
                                    status=""
                                    validateStatus=""
                                  >
                                    <Col
                                      className="ant-form-item-control"
                                    >
                                      <div
                                        className="ant-col ant-form-item-control"
                                        style={Object {}}
                                      >
                                        <div
                                          className="ant-form-item-control-input"
                                        >
                                          <div
                                            className="ant-form-item-control-input-content"
                                          >
                                            <ForwardRef(AutoComplete)
                                              allowClear={true}
                                              id="stopSequence_autoComplete"
                                              onChange={[Function]}
                                              onSelect={[Function]}
                                              placeholder="Enter stop sequence name"
                                              value=""
                                            >
                                              <ForwardRef(InternalSelect)
                                                allowClear={true}
                                                className="ant-select-auto-complete"
                                                id="stopSequence_autoComplete"
                                                mode="SECRET_COMBOBOX_MODE_DO_NOT_USE"
                                                onChange={[Function]}
                                                onSelect={[Function]}
                                                placeholder="Enter stop sequence name"
                                                prefixCls="ant-select"
                                                value=""
                                              >
                                                <Select
                                                  allowClear={true}
                                                  className="ant-select-auto-complete"
                                                  clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                  dropdownClassName=""
                                                  id="stopSequence_autoComplete"
                                                  inputIcon={[Function]}
                                                  listHeight={256}
                                                  listItemHeight={24}
                                                  menuItemSelectedIcon={null}
                                                  mode="combobox"
                                                  notFoundContent={null}
                                                  onChange={[Function]}
                                                  onSelect={[Function]}
                                                  placeholder="Enter stop sequence name"
                                                  prefixCls="ant-select"
                                                  removeIcon={<ForwardRef(CloseOutlined) />}
                                                  transitionName="slide-up"
                                                  value=""
                                                >
                                                  <ForwardRef(Select)
                                                    allowClear={true}
                                                    className="ant-select-auto-complete"
                                                    clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                    dropdownClassName=""
                                                    id="stopSequence_autoComplete"
                                                    inputIcon={[Function]}
                                                    listHeight={256}
                                                    listItemHeight={24}
                                                    menuItemSelectedIcon={null}
                                                    mode="combobox"
                                                    notFoundContent={null}
                                                    onChange={[Function]}
                                                    onSelect={[Function]}
                                                    placeholder="Enter stop sequence name"
                                                    prefixCls="ant-select"
                                                    removeIcon={<ForwardRef(CloseOutlined) />}
                                                    transitionName="slide-up"
                                                    value=""
                                                  >
                                                    <div
                                                      className="ant-select ant-select-auto-complete ant-select-single ant-select-allow-clear ant-select-show-search"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                    >
                                                      <SelectTrigger
                                                        containerWidth={null}
                                                        dropdownClassName=""
                                                        empty={true}
                                                        getTriggerDOMNode={[Function]}
                                                        popupElement={
                                                          <ForwardRef(OptionList)
                                                            childrenAsData={true}
                                                            defaultActiveFirstOption={false}
                                                            flattenOptions={Array []}
                                                            height={256}
                                                            id="stopSequence_autoComplete"
                                                            itemHeight={24}
                                                            menuItemSelectedIcon={null}
                                                            multiple={false}
                                                            notFoundContent={null}
                                                            onActiveValue={[Function]}
                                                            onMouseEnter={[Function]}
                                                            onSelect={[Function]}
                                                            onToggleOpen={[Function]}
                                                            options={Array []}
                                                            prefixCls="ant-select"
                                                            searchValue=""
                                                            values={Set {}}
                                                            virtual={true}
                                                          />
                                                        }
                                                        prefixCls="ant-select"
                                                        transitionName="slide-up"
                                                        visible={false}
                                                      >
                                                        <Trigger
                                                          action={Array []}
                                                          afterPopupVisibleChange={[Function]}
                                                          autoDestroy={false}
                                                          blurDelay={0.15}
                                                          builtinPlacements={
                                                            Object {
                                                              "bottomLeft": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tl",
                                                                  "bl",
                                                                ],
                                                              },
                                                              "bottomRight": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "tr",
                                                                  "br",
                                                                ],
                                                              },
                                                              "topLeft": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "bl",
                                                                  "tl",
                                                                ],
                                                              },
                                                              "topRight": Object {
                                                                "offset": Array [
                                                                  0,
                                                                  -4,
                                                                ],
                                                                "overflow": Object {
                                                                  "adjustX": 0,
                                                                  "adjustY": 1,
                                                                },
                                                                "points": Array [
                                                                  "br",
                                                                  "tr",
                                                                ],
                                                              },
                                                            }
                                                          }
                                                          defaultPopupVisible={false}
                                                          destroyPopupOnHide={false}
                                                          focusDelay={0}
                                                          getDocument={[Function]}
                                                          getPopupClassNameFromAlign={[Function]}
                                                          getTriggerDOMNode={[Function]}
                                                          hideAction={Array []}
                                                          mask={false}
                                                          maskClosable={true}
                                                          mouseEnterDelay={0}
                                                          mouseLeaveDelay={0.1}
                                                          onPopupAlign={[Function]}
                                                          onPopupVisibleChange={[Function]}
                                                          popup={
                                                            <div>
                                                              <ForwardRef(OptionList)
                                                                childrenAsData={true}
                                                                defaultActiveFirstOption={false}
                                                                flattenOptions={Array []}
                                                                height={256}
                                                                id="stopSequence_autoComplete"
                                                                itemHeight={24}
                                                                menuItemSelectedIcon={null}
                                                                multiple={false}
                                                                notFoundContent={null}
                                                                onActiveValue={[Function]}
                                                                onMouseEnter={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                options={Array []}
                                                                prefixCls="ant-select"
                                                                searchValue=""
                                                                values={Set {}}
                                                                virtual={true}
                                                              />
                                                            </div>
                                                          }
                                                          popupAlign={Object {}}
                                                          popupClassName="ant-select-dropdown-empty"
                                                          popupPlacement="bottomLeft"
                                                          popupStyle={
                                                            Object {
                                                              "minWidth": null,
                                                              "width": null,
                                                            }
                                                          }
                                                          popupTransitionName="slide-up"
                                                          popupVisible={false}
                                                          prefixCls="ant-select-dropdown"
                                                          showAction={Array []}
                                                        >
                                                          <Selector
                                                            accessibilityIndex={0}
                                                            activeValue={null}
                                                            allowClear={true}
                                                            className="ant-select-auto-complete"
                                                            clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                            domRef={
                                                              Object {
                                                                "current": <div
                                                                  class="ant-select-selector"
                                                                >
                                                                  <span
                                                                    class="ant-select-selection-search"
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="stopSequence_autoComplete_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="stopSequence_autoComplete_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="stopSequence_autoComplete_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="stopSequence_autoComplete"
                                                                      role="combobox"
                                                                      type="search"
                                                                      value=""
                                                                    />
                                                                  </span>
                                                                  <span
                                                                    class="ant-select-selection-placeholder"
                                                                  >
                                                                    Enter stop sequence name
                                                                  </span>
                                                                </div>,
                                                              }
                                                            }
                                                            dropdownClassName=""
                                                            id="stopSequence_autoComplete"
                                                            inputElement={null}
                                                            inputIcon={[Function]}
                                                            key="trigger"
                                                            listHeight={256}
                                                            listItemHeight={24}
                                                            menuItemSelectedIcon={null}
                                                            mode="combobox"
                                                            multiple={false}
                                                            notFoundContent={null}
                                                            onChange={[Function]}
                                                            onSearch={[Function]}
                                                            onSearchSubmit={[Function]}
                                                            onSelect={[Function]}
                                                            onToggleOpen={[Function]}
                                                            placeholder="Enter stop sequence name"
                                                            prefixCls="ant-select"
                                                            removeIcon={<ForwardRef(CloseOutlined) />}
                                                            searchValue=""
                                                            showSearch={true}
                                                            tokenWithEnter={false}
                                                            transitionName="slide-up"
                                                            value=""
                                                            values={Array []}
                                                          >
                                                            <div
                                                              className="ant-select-selector"
                                                              onClick={[Function]}
                                                              onMouseDown={[Function]}
                                                            >
                                                              <SingleSelector
                                                                accessibilityIndex={0}
                                                                activeValue={null}
                                                                allowClear={true}
                                                                className="ant-select-auto-complete"
                                                                clearIcon={<ForwardRef(CloseCircleFilled) />}
                                                                domRef={
                                                                  Object {
                                                                    "current": <div
                                                                      class="ant-select-selector"
                                                                    >
                                                                      <span
                                                                        class="ant-select-selection-search"
                                                                      >
                                                                        <input
                                                                          aria-activedescendant="stopSequence_autoComplete_list_0"
                                                                          aria-autocomplete="list"
                                                                          aria-controls="stopSequence_autoComplete_list"
                                                                          aria-haspopup="listbox"
                                                                          aria-owns="stopSequence_autoComplete_list"
                                                                          autocomplete="off"
                                                                          class="ant-select-selection-search-input"
                                                                          id="stopSequence_autoComplete"
                                                                          role="combobox"
                                                                          type="search"
                                                                          value=""
                                                                        />
                                                                      </span>
                                                                      <span
                                                                        class="ant-select-selection-placeholder"
                                                                      >
                                                                        Enter stop sequence name
                                                                      </span>
                                                                    </div>,
                                                                  }
                                                                }
                                                                dropdownClassName=""
                                                                id="stopSequence_autoComplete"
                                                                inputElement={null}
                                                                inputIcon={[Function]}
                                                                inputRef={
                                                                  Object {
                                                                    "current": <input
                                                                      aria-activedescendant="stopSequence_autoComplete_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="stopSequence_autoComplete_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="stopSequence_autoComplete_list"
                                                                      autocomplete="off"
                                                                      class="ant-select-selection-search-input"
                                                                      id="stopSequence_autoComplete"
                                                                      role="combobox"
                                                                      type="search"
                                                                      value=""
                                                                    />,
                                                                  }
                                                                }
                                                                listHeight={256}
                                                                listItemHeight={24}
                                                                menuItemSelectedIcon={null}
                                                                mode="combobox"
                                                                multiple={false}
                                                                notFoundContent={null}
                                                                onChange={[Function]}
                                                                onInputChange={[Function]}
                                                                onInputCompositionEnd={[Function]}
                                                                onInputCompositionStart={[Function]}
                                                                onInputKeyDown={[Function]}
                                                                onInputMouseDown={[Function]}
                                                                onInputPaste={[Function]}
                                                                onSearch={[Function]}
                                                                onSearchSubmit={[Function]}
                                                                onSelect={[Function]}
                                                                onToggleOpen={[Function]}
                                                                placeholder="Enter stop sequence name"
                                                                prefixCls="ant-select"
                                                                removeIcon={<ForwardRef(CloseOutlined) />}
                                                                searchValue=""
                                                                showSearch={true}
                                                                tokenWithEnter={false}
                                                                transitionName="slide-up"
                                                                value=""
                                                                values={Array []}
                                                              >
                                                                <span
                                                                  className="ant-select-selection-search"
                                                                >
                                                                  <Input
                                                                    accessibilityIndex={0}
                                                                    attrs={Object {}}
                                                                    editable={true}
                                                                    id="stopSequence_autoComplete"
                                                                    inputElement={null}
                                                                    onChange={[Function]}
                                                                    onCompositionEnd={[Function]}
                                                                    onCompositionStart={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onPaste={[Function]}
                                                                    prefixCls="ant-select"
                                                                    value=""
                                                                  >
                                                                    <input
                                                                      aria-activedescendant="stopSequence_autoComplete_list_0"
                                                                      aria-autocomplete="list"
                                                                      aria-controls="stopSequence_autoComplete_list"
                                                                      aria-haspopup="listbox"
                                                                      aria-owns="stopSequence_autoComplete_list"
                                                                      autoComplete="off"
                                                                      className="ant-select-selection-search-input"
                                                                      id="stopSequence_autoComplete"
                                                                      onChange={[Function]}
                                                                      onCompositionEnd={[Function]}
                                                                      onCompositionStart={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onPaste={[Function]}
                                                                      readOnly={false}
                                                                      role="combobox"
                                                                      style={
                                                                        Object {
                                                                          "opacity": null,
                                                                        }
                                                                      }
                                                                      type="search"
                                                                      unselectable={null}
                                                                      value=""
                                                                    />
                                                                  </Input>
                                                                </span>
                                                                <span
                                                                  className="ant-select-selection-placeholder"
                                                                >
                                                                  Enter stop sequence name
                                                                </span>
                                                              </SingleSelector>
                                                            </div>
                                                          </Selector>
                                                        </Trigger>
                                                      </SelectTrigger>
                                                    </div>
                                                  </ForwardRef(Select)>
                                                </Select>
                                              </ForwardRef(InternalSelect)>
                                            </ForwardRef(AutoComplete)>
                                          </div>
                                        </div>
                                        <ErrorList
                                          errors={Array []}
                                          onDomErrorVisibleChange={[Function]}
                                        >
                                          <CSSMotion
                                            motionAppear={true}
                                            motionDeadline={500}
                                            motionName="show-help"
                                            onLeaveEnd={[Function]}
                                            removeOnLeave={true}
                                            visible={false}
                                          >
                                            <DomWrapper />
                                          </CSSMotion>
                                        </ErrorList>
                                      </div>
                                    </Col>
                                  </FormItemInput>
                                </div>
                              </Row>
                            </FormItem>
                          </form>
                        </ForwardRef(Form)>
                      </SizeContextProvider>
                    </ForwardRef(InternalForm)>
                  </div>
                </div>
              </Card>
            </Memo(LoadStopSequence)>
          </div>
        </Col>
        <Col
          xs={24}
        >
          <div
            className="ant-col ant-col-xs-24"
            style={
              Object {
                "paddingBottom": 4,
                "paddingLeft": 4,
                "paddingRight": 4,
                "paddingTop": 4,
              }
            }
          >
            <Memo(SaveStopsSequenceForm)
              result={[Function]}
            >
              <Card
                bordered={true}
              >
                <div
                  className="ant-card ant-card-bordered"
                >
                  <div
                    className="ant-card-body"
                    style={Object {}}
                  >
                    <Collapse
                      bordered={true}
                      defaultActiveKey="1"
                    >
                      <Collapse
                        accordion={false}
                        bordered={true}
                        className="ant-collapse-icon-position-left"
                        defaultActiveKey="1"
                        destroyInactivePanel={false}
                        expandIcon={[Function]}
                        onChange={[Function]}
                        openAnimation={
                          Object {
                            "appear": [Function],
                            "enter": [Function],
                            "leave": [Function],
                          }
                        }
                        prefixCls="ant-collapse"
                      >
                        <div
                          className="ant-collapse ant-collapse-icon-position-left"
                          role={null}
                        >
                          <CollapsePanel
                            accordion={false}
                            destroyInactivePanel={false}
                            expandIcon={[Function]}
                            header="Stop sequence save form"
                            isActive={true}
                            key="1"
                            onItemClick={[Function]}
                            openAnimation={
                              Object {
                                "appear": [Function],
                                "enter": [Function],
                                "leave": [Function],
                              }
                            }
                            panelKey="1"
                            prefixCls="ant-collapse"
                          >
                            <CollapsePanel
                              accordion={false}
                              className=""
                              destroyInactivePanel={false}
                              expandIcon={[Function]}
                              forceRender={false}
                              header="Stop sequence save form"
                              headerClass=""
                              isActive={true}
                              onItemClick={[Function]}
                              openAnimation={
                                Object {
                                  "appear": [Function],
                                  "enter": [Function],
                                  "leave": [Function],
                                }
                              }
                              panelKey="1"
                              prefixCls="ant-collapse"
                              showArrow={true}
                            >
                              <div
                                className="ant-collapse-item ant-collapse-item-active"
                              >
                                <div
                                  aria-expanded="true"
                                  className="ant-collapse-header"
                                  onClick={[Function]}
                                  onKeyPress={[Function]}
                                  role="button"
                                  tabIndex={0}
                                >
                                  <ForwardRef(RightOutlined)
                                    className="ant-collapse-arrow"
                                    rotate={90}
                                  >
                                    <AntdIcon
                                      className="ant-collapse-arrow"
                                      icon={
                                        Object {
                                          "icon": Object {
                                            "attrs": Object {
                                              "focusable": "false",
                                              "viewBox": "64 64 896 896",
                                            },
                                            "children": Array [
                                              Object {
                                                "attrs": Object {
                                                  "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                },
                                                "tag": "path",
                                              },
                                            ],
                                            "tag": "svg",
                                          },
                                          "name": "right",
                                          "theme": "outlined",
                                        }
                                      }
                                      rotate={90}
                                    >
                                      <span
                                        aria-label="right"
                                        className="anticon anticon-right ant-collapse-arrow"
                                        role="img"
                                      >
                                        <IconReact
                                          className=""
                                          icon={
                                            Object {
                                              "icon": Object {
                                                "attrs": Object {
                                                  "focusable": "false",
                                                  "viewBox": "64 64 896 896",
                                                },
                                                "children": Array [
                                                  Object {
                                                    "attrs": Object {
                                                      "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                    },
                                                    "tag": "path",
                                                  },
                                                ],
                                                "tag": "svg",
                                              },
                                              "name": "right",
                                              "theme": "outlined",
                                            }
                                          }
                                          style={
                                            Object {
                                              "msTransform": "rotate(90deg)",
                                              "transform": "rotate(90deg)",
                                            }
                                          }
                                        >
                                          <svg
                                            aria-hidden="true"
                                            className=""
                                            data-icon="right"
                                            fill="currentColor"
                                            focusable="false"
                                            height="1em"
                                            key="svg-right"
                                            style={
                                              Object {
                                                "msTransform": "rotate(90deg)",
                                                "transform": "rotate(90deg)",
                                              }
                                            }
                                            viewBox="64 64 896 896"
                                            width="1em"
                                          >
                                            <path
                                              d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
                                              key="svg-right-svg-0"
                                            />
                                          </svg>
                                        </IconReact>
                                      </span>
                                    </AntdIcon>
                                  </ForwardRef(RightOutlined)>
                                  Stop sequence save form
                                </div>
                                <Animate
                                  animation={
                                    Object {
                                      "appear": [Function],
                                      "enter": [Function],
                                      "leave": [Function],
                                    }
                                  }
                                  component=""
                                  componentProps={Object {}}
                                  exclusive={true}
                                  onAppear={[Function]}
                                  onEnd={[Function]}
                                  onEnter={[Function]}
                                  onLeave={[Function]}
                                  showProp="isActive"
                                  transitionAppear={false}
                                  transitionEnter={true}
                                  transitionLeave={true}
                                >
                                  <AnimateChild
                                    animation={
                                      Object {
                                        "appear": [Function],
                                        "enter": [Function],
                                        "leave": [Function],
                                      }
                                    }
                                    key="rc_animate_1605548678973"
                                    transitionAppear={false}
                                    transitionEnter={true}
                                    transitionLeave={true}
                                  >
                                    <PanelContent
                                      destroyInactivePanel={false}
                                      forceRender={false}
                                      isActive={true}
                                      key="rc_animate_1605548678973"
                                      prefixCls="ant-collapse"
                                      role={null}
                                    >
                                      <div
                                        className="ant-collapse-content ant-collapse-content-active"
                                        role={null}
                                      >
                                        <div
                                          className="ant-collapse-content-box"
                                        >
                                          <ForwardRef(InternalForm)
                                            form={
                                              Object {
                                                "__INTERNAL__": Object {
                                                  "itemRef": [Function],
                                                  "name": "basic",
                                                },
                                                "getFieldError": [Function],
                                                "getFieldInstance": [Function],
                                                "getFieldValue": [Function],
                                                "getFieldsError": [Function],
                                                "getFieldsValue": [Function],
                                                "getInternalHooks": [Function],
                                                "isFieldTouched": [Function],
                                                "isFieldValidating": [Function],
                                                "isFieldsTouched": [Function],
                                                "isFieldsValidating": [Function],
                                                "resetFields": [Function],
                                                "scrollToField": [Function],
                                                "setFields": [Function],
                                                "setFieldsValue": [Function],
                                                "submit": [Function],
                                                "validateFields": [Function],
                                              }
                                            }
                                            id="formWrapper"
                                            initialValues={
                                              Object {
                                                "remember": true,
                                              }
                                            }
                                            layout="vertical"
                                            name="basic"
                                            onFinish={[Function]}
                                            requiredMark={false}
                                          >
                                            <SizeContextProvider>
                                              <ForwardRef(Form)
                                                className="ant-form ant-form-vertical ant-form-hide-required-mark"
                                                form={
                                                  Object {
                                                    "__INTERNAL__": Object {
                                                      "itemRef": [Function],
                                                      "name": "basic",
                                                    },
                                                    "getFieldError": [Function],
                                                    "getFieldInstance": [Function],
                                                    "getFieldValue": [Function],
                                                    "getFieldsError": [Function],
                                                    "getFieldsValue": [Function],
                                                    "getInternalHooks": [Function],
                                                    "isFieldTouched": [Function],
                                                    "isFieldValidating": [Function],
                                                    "isFieldsTouched": [Function],
                                                    "isFieldsValidating": [Function],
                                                    "resetFields": [Function],
                                                    "scrollToField": [Function],
                                                    "setFields": [Function],
                                                    "setFieldsValue": [Function],
                                                    "submit": [Function],
                                                    "validateFields": [Function],
                                                  }
                                                }
                                                id="formWrapper"
                                                initialValues={
                                                  Object {
                                                    "remember": true,
                                                  }
                                                }
                                                name="basic"
                                                onFinish={[Function]}
                                                onFinishFailed={[Function]}
                                              >
                                                <form
                                                  className="ant-form ant-form-vertical ant-form-hide-required-mark"
                                                  id="formWrapper"
                                                  onSubmit={[Function]}
                                                >
                                                  <FormItem
                                                    label="Name"
                                                    name="name"
                                                    rules={
                                                      Array [
                                                        Object {
                                                          "message": "Please give a Name",
                                                          "required": true,
                                                        },
                                                      ]
                                                    }
                                                  >
                                                    <WrapperField
                                                      label="Name"
                                                      messageVariables={
                                                        Object {
                                                          "label": "Name",
                                                        }
                                                      }
                                                      name="name"
                                                      onReset={[Function]}
                                                      rules={
                                                        Array [
                                                          Object {
                                                            "message": "Please give a Name",
                                                            "required": true,
                                                          },
                                                        ]
                                                      }
                                                      trigger="onChange"
                                                      validateTrigger="onChange"
                                                    >
                                                      <Field
                                                        fieldContext={
                                                          Object {
                                                            "__INTERNAL__": Object {
                                                              "itemRef": [Function],
                                                              "name": "basic",
                                                            },
                                                            "getFieldError": [Function],
                                                            "getFieldInstance": [Function],
                                                            "getFieldValue": [Function],
                                                            "getFieldsError": [Function],
                                                            "getFieldsValue": [Function],
                                                            "getInternalHooks": [Function],
                                                            "isFieldTouched": [Function],
                                                            "isFieldValidating": [Function],
                                                            "isFieldsTouched": [Function],
                                                            "isFieldsValidating": [Function],
                                                            "resetFields": [Function],
                                                            "scrollToField": [Function],
                                                            "setFields": [Function],
                                                            "setFieldsValue": [Function],
                                                            "submit": [Function],
                                                            "validateFields": [Function],
                                                            "validateTrigger": "onChange",
                                                          }
                                                        }
                                                        key="_name"
                                                        label="Name"
                                                        messageVariables={
                                                          Object {
                                                            "label": "Name",
                                                          }
                                                        }
                                                        name={
                                                          Array [
                                                            "name",
                                                          ]
                                                        }
                                                        onReset={[Function]}
                                                        rules={
                                                          Array [
                                                            Object {
                                                              "message": "Please give a Name",
                                                              "required": true,
                                                            },
                                                          ]
                                                        }
                                                        trigger="onChange"
                                                        validateTrigger="onChange"
                                                        valuePropName="value"
                                                      >
                                                        <Row
                                                          className="ant-form-item"
                                                          key="row"
                                                        >
                                                          <div
                                                            className="ant-row ant-form-item"
                                                            style={Object {}}
                                                          >
                                                            <FormItemLabel
                                                              htmlFor="basic_name"
                                                              label="Name"
                                                              name="name"
                                                              prefixCls="ant-form"
                                                              required={true}
                                                              requiredMark={false}
                                                              rules={
                                                                Array [
                                                                  Object {
                                                                    "message": "Please give a Name",
                                                                    "required": true,
                                                                  },
                                                                ]
                                                              }
                                                            >
                                                              <Col
                                                                className="ant-form-item-label"
                                                              >
                                                                <div
                                                                  className="ant-col ant-form-item-label"
                                                                  style={Object {}}
                                                                >
                                                                  <label
                                                                    className="ant-form-item-required"
                                                                    htmlFor="basic_name"
                                                                    title="Name"
                                                                  >
                                                                    Name
                                                                  </label>
                                                                </div>
                                                              </Col>
                                                            </FormItemLabel>
                                                            <FormItemInput
                                                              errors={Array []}
                                                              label="Name"
                                                              name={
                                                                Array [
                                                                  "name",
                                                                ]
                                                              }
                                                              onDomErrorVisibleChange={[Function]}
                                                              prefixCls="ant-form"
                                                              rules={
                                                                Array [
                                                                  Object {
                                                                    "message": "Please give a Name",
                                                                    "required": true,
                                                                  },
                                                                ]
                                                              }
                                                              status=""
                                                              touched={false}
                                                              validateStatus=""
                                                              validating={false}
                                                            >
                                                              <Col
                                                                className="ant-form-item-control"
                                                              >
                                                                <div
                                                                  className="ant-col ant-form-item-control"
                                                                  style={Object {}}
                                                                >
                                                                  <div
                                                                    className="ant-form-item-control-input"
                                                                  >
                                                                    <div
                                                                      className="ant-form-item-control-input-content"
                                                                    >
                                                                      <Component
                                                                        update={1}
                                                                      >
                                                                        <Input
                                                                          allowClear={true}
                                                                          id="name-input"
                                                                          onChange={[Function]}
                                                                          type="text"
                                                                        >
                                                                          <ClearableLabeledInput
                                                                            allowClear={true}
                                                                            bordered={true}
                                                                            element={
                                                                              <input
                                                                                className="ant-input"
                                                                                id="name-input"
                                                                                onBlur={[Function]}
                                                                                onChange={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                type="text"
                                                                              />
                                                                            }
                                                                            focused={false}
                                                                            handleReset={[Function]}
                                                                            id="name-input"
                                                                            inputType="input"
                                                                            onChange={[Function]}
                                                                            prefixCls="ant-input"
                                                                            triggerFocus={[Function]}
                                                                            type="text"
                                                                            value=""
                                                                          >
                                                                            <span
                                                                              className="ant-input-affix-wrapper"
                                                                              onMouseUp={[Function]}
                                                                            >
                                                                              <input
                                                                                className="ant-input"
                                                                                id="name-input"
                                                                                onBlur={[Function]}
                                                                                onChange={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                style={null}
                                                                                type="text"
                                                                                value=""
                                                                              />
                                                                              <span
                                                                                className="ant-input-suffix"
                                                                              >
                                                                                <ForwardRef(CloseCircleFilled)
                                                                                  className="ant-input-clear-icon-hidden ant-input-clear-icon"
                                                                                  onClick={[Function]}
                                                                                  role="button"
                                                                                >
                                                                                  <AntdIcon
                                                                                    className="ant-input-clear-icon-hidden ant-input-clear-icon"
                                                                                    icon={
                                                                                      Object {
                                                                                        "icon": Object {
                                                                                          "attrs": Object {
                                                                                            "focusable": "false",
                                                                                            "viewBox": "64 64 896 896",
                                                                                          },
                                                                                          "children": Array [
                                                                                            Object {
                                                                                              "attrs": Object {
                                                                                                "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                              },
                                                                                              "tag": "path",
                                                                                            },
                                                                                          ],
                                                                                          "tag": "svg",
                                                                                        },
                                                                                        "name": "close-circle",
                                                                                        "theme": "filled",
                                                                                      }
                                                                                    }
                                                                                    onClick={[Function]}
                                                                                    role="button"
                                                                                  >
                                                                                    <span
                                                                                      aria-label="close-circle"
                                                                                      className="anticon anticon-close-circle ant-input-clear-icon-hidden ant-input-clear-icon"
                                                                                      onClick={[Function]}
                                                                                      role="button"
                                                                                      tabIndex={-1}
                                                                                    >
                                                                                      <IconReact
                                                                                        className=""
                                                                                        icon={
                                                                                          Object {
                                                                                            "icon": Object {
                                                                                              "attrs": Object {
                                                                                                "focusable": "false",
                                                                                                "viewBox": "64 64 896 896",
                                                                                              },
                                                                                              "children": Array [
                                                                                                Object {
                                                                                                  "attrs": Object {
                                                                                                    "d": "M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z",
                                                                                                  },
                                                                                                  "tag": "path",
                                                                                                },
                                                                                              ],
                                                                                              "tag": "svg",
                                                                                            },
                                                                                            "name": "close-circle",
                                                                                            "theme": "filled",
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <svg
                                                                                          aria-hidden="true"
                                                                                          className=""
                                                                                          data-icon="close-circle"
                                                                                          fill="currentColor"
                                                                                          focusable="false"
                                                                                          height="1em"
                                                                                          key="svg-close-circle"
                                                                                          viewBox="64 64 896 896"
                                                                                          width="1em"
                                                                                        >
                                                                                          <path
                                                                                            d="M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z"
                                                                                            key="svg-close-circle-svg-0"
                                                                                          />
                                                                                        </svg>
                                                                                      </IconReact>
                                                                                    </span>
                                                                                  </AntdIcon>
                                                                                </ForwardRef(CloseCircleFilled)>
                                                                              </span>
                                                                            </span>
                                                                          </ClearableLabeledInput>
                                                                        </Input>
                                                                      </Component>
                                                                    </div>
                                                                  </div>
                                                                  <ErrorList
                                                                    errors={Array []}
                                                                    onDomErrorVisibleChange={[Function]}
                                                                  >
                                                                    <CSSMotion
                                                                      motionAppear={true}
                                                                      motionDeadline={500}
                                                                      motionName="show-help"
                                                                      onLeaveEnd={[Function]}
                                                                      removeOnLeave={true}
                                                                      visible={false}
                                                                    >
                                                                      <DomWrapper />
                                                                    </CSSMotion>
                                                                  </ErrorList>
                                                                </div>
                                                              </Col>
                                                            </FormItemInput>
                                                          </div>
                                                        </Row>
                                                      </Field>
                                                    </WrapperField>
                                                  </FormItem>
                                                  <div
                                                    style={
                                                      Object {
                                                        "paddingBottom": "20px",
                                                      }
                                                    }
                                                  >
                                                    <Button
                                                      block={false}
                                                      ghost={false}
                                                      htmlType="button"
                                                      id="AddSchedule-button"
                                                      loading={false}
                                                      onClick={[Function]}
                                                      type="primary"
                                                    >
                                                      <Wave>
                                                        <button
                                                          className="ant-btn ant-btn-primary"
                                                          id="AddSchedule-button"
                                                          onClick={[Function]}
                                                          type="button"
                                                        >
                                                          <LoadingIcon
                                                            existIcon={false}
                                                            loading={false}
                                                            prefixCls="ant-btn"
                                                          >
                                                            <CSSMotion
                                                              motionName="ant-btn-loading-icon-motion"
                                                              onAppearActive={[Function]}
                                                              onAppearStart={[Function]}
                                                              onEnterActive={[Function]}
                                                              onEnterStart={[Function]}
                                                              onLeaveActive={[Function]}
                                                              onLeaveStart={[Function]}
                                                              removeOnLeave={true}
                                                              visible={false}
                                                            >
                                                              <DomWrapper />
                                                            </CSSMotion>
                                                          </LoadingIcon>
                                                          <span
                                                            key=".0"
                                                          >
                                                            Add schedule
                                                          </span>
                                                        </button>
                                                      </Wave>
                                                    </Button>
                                                  </div>
                                                  <Collapse
                                                    bordered={true}
                                                    defaultActiveKey="3"
                                                  >
                                                    <Collapse
                                                      accordion={false}
                                                      bordered={true}
                                                      className="ant-collapse-icon-position-left"
                                                      defaultActiveKey="3"
                                                      destroyInactivePanel={false}
                                                      expandIcon={[Function]}
                                                      onChange={[Function]}
                                                      openAnimation={
                                                        Object {
                                                          "appear": [Function],
                                                          "enter": [Function],
                                                          "leave": [Function],
                                                        }
                                                      }
                                                      prefixCls="ant-collapse"
                                                    >
                                                      <div
                                                        className="ant-collapse ant-collapse-icon-position-left"
                                                        role={null}
                                                      >
                                                        <CollapsePanel
                                                          accordion={false}
                                                          destroyInactivePanel={false}
                                                          expandIcon={[Function]}
                                                          header="Stop sequence schedule"
                                                          isActive={false}
                                                          key="2"
                                                          onItemClick={[Function]}
                                                          openAnimation={
                                                            Object {
                                                              "appear": [Function],
                                                              "enter": [Function],
                                                              "leave": [Function],
                                                            }
                                                          }
                                                          panelKey="2"
                                                          prefixCls="ant-collapse"
                                                        >
                                                          <CollapsePanel
                                                            accordion={false}
                                                            className=""
                                                            destroyInactivePanel={false}
                                                            expandIcon={[Function]}
                                                            forceRender={false}
                                                            header="Stop sequence schedule"
                                                            headerClass=""
                                                            isActive={false}
                                                            onItemClick={[Function]}
                                                            openAnimation={
                                                              Object {
                                                                "appear": [Function],
                                                                "enter": [Function],
                                                                "leave": [Function],
                                                              }
                                                            }
                                                            panelKey="2"
                                                            prefixCls="ant-collapse"
                                                            showArrow={true}
                                                          >
                                                            <div
                                                              className="ant-collapse-item"
                                                            >
                                                              <div
                                                                aria-expanded="false"
                                                                className="ant-collapse-header"
                                                                onClick={[Function]}
                                                                onKeyPress={[Function]}
                                                                role="button"
                                                                tabIndex={0}
                                                              >
                                                                <ForwardRef(RightOutlined)
                                                                  className="ant-collapse-arrow"
                                                                >
                                                                  <AntdIcon
                                                                    className="ant-collapse-arrow"
                                                                    icon={
                                                                      Object {
                                                                        "icon": Object {
                                                                          "attrs": Object {
                                                                            "focusable": "false",
                                                                            "viewBox": "64 64 896 896",
                                                                          },
                                                                          "children": Array [
                                                                            Object {
                                                                              "attrs": Object {
                                                                                "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                                              },
                                                                              "tag": "path",
                                                                            },
                                                                          ],
                                                                          "tag": "svg",
                                                                        },
                                                                        "name": "right",
                                                                        "theme": "outlined",
                                                                      }
                                                                    }
                                                                  >
                                                                    <span
                                                                      aria-label="right"
                                                                      className="anticon anticon-right ant-collapse-arrow"
                                                                      role="img"
                                                                    >
                                                                      <IconReact
                                                                        className=""
                                                                        icon={
                                                                          Object {
                                                                            "icon": Object {
                                                                              "attrs": Object {
                                                                                "focusable": "false",
                                                                                "viewBox": "64 64 896 896",
                                                                              },
                                                                              "children": Array [
                                                                                Object {
                                                                                  "attrs": Object {
                                                                                    "d": "M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z",
                                                                                  },
                                                                                  "tag": "path",
                                                                                },
                                                                              ],
                                                                              "tag": "svg",
                                                                            },
                                                                            "name": "right",
                                                                            "theme": "outlined",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden="true"
                                                                          className=""
                                                                          data-icon="right"
                                                                          fill="currentColor"
                                                                          focusable="false"
                                                                          height="1em"
                                                                          key="svg-right"
                                                                          viewBox="64 64 896 896"
                                                                          width="1em"
                                                                        >
                                                                          <path
                                                                            d="M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z"
                                                                            key="svg-right-svg-0"
                                                                          />
                                                                        </svg>
                                                                      </IconReact>
                                                                    </span>
                                                                  </AntdIcon>
                                                                </ForwardRef(RightOutlined)>
                                                                Stop sequence schedule
                                                              </div>
                                                              <Animate
                                                                animation={
                                                                  Object {
                                                                    "appear": [Function],
                                                                    "enter": [Function],
                                                                    "leave": [Function],
                                                                  }
                                                                }
                                                                component=""
                                                                componentProps={Object {}}
                                                                exclusive={true}
                                                                onAppear={[Function]}
                                                                onEnd={[Function]}
                                                                onEnter={[Function]}
                                                                onLeave={[Function]}
                                                                showProp="isActive"
                                                                transitionAppear={false}
                                                                transitionEnter={true}
                                                                transitionLeave={true}
                                                              >
                                                                <AnimateChild
                                                                  animation={
                                                                    Object {
                                                                      "appear": [Function],
                                                                      "enter": [Function],
                                                                      "leave": [Function],
                                                                    }
                                                                  }
                                                                  key="rc_animate_1605548678973"
                                                                  transitionAppear={false}
                                                                  transitionEnter={true}
                                                                  transitionLeave={true}
                                                                >
                                                                  <PanelContent
                                                                    destroyInactivePanel={false}
                                                                    forceRender={false}
                                                                    isActive={false}
                                                                    key="rc_animate_1605548678973"
                                                                    prefixCls="ant-collapse"
                                                                    role={null}
                                                                  />
                                                                </AnimateChild>
                                                              </Animate>
                                                            </div>
                                                          </CollapsePanel>
                                                        </CollapsePanel>
                                                      </div>
                                                    </Collapse>
                                                  </Collapse>
                                                </form>
                                              </ForwardRef(Form)>
                                            </SizeContextProvider>
                                          </ForwardRef(InternalForm)>
                                        </div>
                                      </div>
                                    </PanelContent>
                                  </AnimateChild>
                                </Animate>
                              </div>
                            </CollapsePanel>
                          </CollapsePanel>
                        </div>
                      </Collapse>
                    </Collapse>
                  </div>
                </div>
              </Card>
            </Memo(SaveStopsSequenceForm)>
          </div>
        </Col>
        <Component
          currentStopSequence={Object {}}
          distance={Array []}
          handleSelectAutoSearch={[Function]}
          onAddAfterSelected={[Function]}
          onAddBeforSelected={[Function]}
          onDeleteMarkerFromMap={[Function]}
          selectMarkerOnMap={[Function]}
          stateDND={
            Object {
              "suggestions": Object {
                "items": Array [],
                "title": "Suggestion",
              },
              "trajekt": Object {
                "items": Array [],
                "title": "Stop sequence",
              },
            }
          }
          stations={Array []}
        >
          <div
            id="mapMock"
          >
            Map mocked
          </div>
        </Component>
        <Col
          xs={24}
          xxl={12}
        >
          <div
            className="ant-col ant-col-xs-24 ant-col-xxl-12"
            style={
              Object {
                "paddingBottom": 4,
                "paddingLeft": 4,
                "paddingRight": 4,
                "paddingTop": 4,
              }
            }
          >
            <Memo(DragDrop)
              handleAddStopsOnCLick={[Function]}
              handleDragEnd={[Function]}
              onDelete={[Function]}
              onclick={[Function]}
              stateDND={
                Object {
                  "suggestions": Object {
                    "items": Array [],
                    "title": "Suggestion",
                  },
                  "trajekt": Object {
                    "items": Array [],
                    "title": "Stop sequence",
                  },
                }
              }
            >
              <DragDropContext
                onDragEnd={[Function]}
              >
                <Col
                  xs={24}
                >
                  <div
                    className="ant-col ant-col-xs-24"
                    style={
                      Object {
                        "paddingBottom": 4,
                        "paddingLeft": 4,
                        "paddingRight": 4,
                        "paddingTop": 4,
                      }
                    }
                  >
                    <Card
                      bordered={true}
                      title="Suggestion"
                    >
                      <div
                        className="ant-card ant-card-bordered"
                      >
                        <div
                          className="ant-card-head"
                          style={Object {}}
                        >
                          <div
                            className="ant-card-head-wrapper"
                          >
                            <div
                              className="ant-card-head-title"
                            >
                              Suggestion
                            </div>
                          </div>
                        </div>
                        <div
                          className="ant-card-body"
                          style={Object {}}
                        >
                          <Droppable
                            droppableId="suggestions"
                          >
                            <div
                              style={
                                Object {
                                  "display": "flex",
                                }
                              }
                            >
                              <Col
                                lg={12}
                                xs={24}
                              >
                                <div
                                  className="ant-col ant-col-xs-24 ant-col-lg-12"
                                  style={
                                    Object {
                                      "paddingBottom": 4,
                                      "paddingLeft": 4,
                                      "paddingRight": 4,
                                      "paddingTop": 4,
                                    }
                                  }
                                >
                                  <div
                                    className="droppable-col"
                                  />
                                </div>
                              </Col>
                              <Col
                                lg={12}
                              >
                                <div
                                  className="ant-col ant-col-lg-12"
                                  style={
                                    Object {
                                      "paddingBottom": 4,
                                      "paddingLeft": 4,
                                      "paddingRight": 4,
                                      "paddingTop": 4,
                                    }
                                  }
                                >
                                  <div
                                    className="droppable-col"
                                  />
                                </div>
                              </Col>
                            </div>
                          </Droppable>
                        </div>
                      </div>
                    </Card>
                  </div>
                </Col>
                <Col
                  xs={24}
                >
                  <div
                    className="ant-col ant-col-xs-24"
                    style={
                      Object {
                        "paddingBottom": 4,
                        "paddingLeft": 4,
                        "paddingRight": 4,
                        "paddingTop": 4,
                      }
                    }
                  >
                    <Card
                      bordered={true}
                      title="Stop sequence"
                    >
                      <div
                        className="ant-card ant-card-bordered"
                      >
                        <div
                          className="ant-card-head"
                          style={Object {}}
                        >
                          <div
                            className="ant-card-head-wrapper"
                          >
                            <div
                              className="ant-card-head-title"
                            >
                              Stop sequence
                            </div>
                          </div>
                        </div>
                        <div
                          className="ant-card-body"
                          style={Object {}}
                        >
                          <div
                            style={
                              Object {
                                "height": "370px",
                                "overflowY": "auto",
                              }
                            }
                          >
                            <Droppable
                              droppableId="trajekt"
                            >
                              <div
                                className="droppable-col"
                              />
                            </Droppable>
                          </div>
                        </div>
                      </div>
                    </Card>
                  </div>
                </Col>
              </DragDropContext>
            </Memo(DragDrop)>
          </div>
        </Col>
      </div>
    </Row>
  </div>
</Aufgabe>
`;
